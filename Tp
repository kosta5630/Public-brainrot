local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DeliveryHitboxUI"
gui.ResetOnSpawn = false

local selectedHitbox = nil
local buttons = {}

-- Keep player in the air and walk toward hitbox
local function skyWalkTo(hitbox)
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")

	-- Force Y = 50
	local startPos = Vector3.new(hrp.Position.X, 50, hrp.Position.Z)
	hrp.CFrame = CFrame.new(startPos)

	local targetXZ = Vector3.new(hitbox.Position.X, 50, hitbox.Position.Z)
	local dropTarget = Vector3.new(hitbox.Position.X, hitbox.Position.Y + 5, hitbox.Position.Z)

	local walking = true

	-- Move toward XZ target
	humanoid:MoveTo(targetXZ)

	-- Force stay in air + monitor distance
	local conn
	conn = RunService.Heartbeat:Connect(function()
		if not character or not character.Parent then conn:Disconnect() return end

		local currentPos = hrp.Position
		local lockedPos = Vector3.new(currentPos.X, 50, currentPos.Z)
		hrp.CFrame = CFrame.new(lockedPos, targetXZ) -- face target

		local horizontalDistance = (Vector3.new(currentPos.X, 0, currentPos.Z) - Vector3.new(targetXZ.X, 0, targetXZ.Z)).Magnitude

		if horizontalDistance <= 2 then
			conn:Disconnect()
			humanoid:MoveTo(dropTarget)
		end
	end)
end

-- Create selection buttons over each DeliveryHitbox
local function createButton(hitbox)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 40, 0, 40)
	button.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	button.BackgroundTransparency = 0.2
	button.Text = ""
	button.BorderSizePixel = 0
	button.AnchorPoint = Vector2.new(0.5, 0.5)
	button.AutoButtonColor = true
	button.ClipsDescendants = true
	button.Parent = gui
	button.ZIndex = 10
	button.Name = "DeliveryButton"

	local corner = Instance.new("UICorner", button)
	corner.CornerRadius = UDim.new(1, 0)

	button.MouseButton1Click:Connect(function()
		selectedHitbox = hitbox
		for _, b in pairs(buttons) do
			b.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
		end
		button.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
	end)

	RunService.RenderStepped:Connect(function()
		if hitbox and hitbox:IsDescendantOf(workspace) then
			local screenPos, onScreen = camera:WorldToViewportPoint(hitbox.Position + Vector3.new(0, 3, 0))
			button.Visible = onScreen
			if onScreen then
				button.Position = UDim2.new(0, screenPos.X, 0, screenPos.Y)
			end
		else
			button.Visible = false
		end
	end)

	table.insert(buttons, button)
end

-- Setup buttons for all DeliveryHitboxes
for _, obj in pairs(workspace:GetDescendants()) do
	if obj:IsA("BasePart") and obj.Name == "DeliveryHitbox" then
		createButton(obj)
	end
end

-- Press T to start sky-walk to selected hitbox
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.T and selectedHitbox then
		skyWalkTo(selectedHitbox)
	end
end)
