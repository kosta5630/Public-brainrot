local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DeliveryHitboxUI"
gui.ResetOnSpawn = false

local selectedHitbox = nil
local buttons = {}

-- Force player to float at Y=50 while walking to destination
local function skyWalkTo(hitbox)
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if not humanoid or not hrp then return end

	-- Teleport to same X/Z at Y = 50
	local startCFrame = CFrame.new(hrp.Position.X, 50, hrp.Position.Z)
	hrp.CFrame = startCFrame

	task.wait(0.1)

	-- Start moving toward the DeliveryHitbox X/Z
	local targetXZ = Vector3.new(hitbox.Position.X, 50, hitbox.Position.Z)
	humanoid:MoveTo(targetXZ)

	-- While walking, keep Y = 50 locked manually every frame
	local walking = true
	local heartbeatConn
	heartbeatConn = RunService.Heartbeat:Connect(function()
		if not walking then
			heartbeatConn:Disconnect()
			return
		end

		-- Maintain sky height
		local currentPos = hrp.Position
		hrp.Velocity = Vector3.zero -- stop gravity pull
		hrp.CFrame = CFrame.new(currentPos.X, 50, currentPos.Z, hrp.CFrame.LookVector.X, 0, hrp.CFrame.LookVector.Z)

		-- Check distance to target X/Z
		local horizontalDist = (Vector3.new(currentPos.X, 0, currentPos.Z) - Vector3.new(hitbox.Position.X, 0, hitbox.Position.Z)).Magnitude
		if horizontalDist <= 2 then
			walking = false
			task.wait(0.1)
			-- Drop down to hitbox
			hrp.CFrame = CFrame.new(hitbox.Position + Vector3.new(0, 5, 0))
		end
	end)
end

-- Create circular buttons
local function createButton(hitbox)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 40, 0, 40)
	button.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	button.BackgroundTransparency = 0.2
	button.Text = ""
	button.BorderSizePixel = 0
	button.AnchorPoint = Vector2.new(0.5, 0.5)
	button.AutoButtonColor = true
	button.ClipsDescendants = true
	button.Parent = gui
	button.ZIndex = 10
	button.Name = "DeliveryButton"

	local corner = Instance.new("UICorner", button)
	corner.CornerRadius = UDim.new(1, 0)

	button.MouseButton1Click:Connect(function()
		selectedHitbox = hitbox
		for _, b in pairs(buttons) do
			b.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
		end
		button.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
	end)

	RunService.RenderStepped:Connect(function()
		if hitbox and hitbox:IsDescendantOf(workspace) then
			local screenPos, onScreen = camera:WorldToViewportPoint(hitbox.Position + Vector3.new(0, 3, 0))
			button.Visible = onScreen
			if onScreen then
				button.Position = UDim2.new(0, screenPos.X, 0, screenPos.Y)
			end
		else
			button.Visible = false
		end
	end)

	table.insert(buttons, button)
end

-- Find all DeliveryHitboxes
for _, obj in pairs(workspace:GetDescendants()) do
	if obj:IsA("BasePart") and obj.Name == "DeliveryHitbox" then
		createButton(obj)
